// -*- Java -*- This ANTLRv4 file was machine-generated by BNFC
parser grammar languageParser;

options {
  tokenVocab = languageLexer;
}

ent returns [ language.Absyn.Ent result ] : p_1=listseveral  { $result = new language.Absyn.Entry($p_1.result); } # Entry
;
exp returns [ language.Absyn.Exp result ] :
Surrogate_id_SYMB_0 p_2=IDENT p_3=PIPPO Surrogate_id_SYMB_1 p_5=type Surrogate_id_SYMB_2  { $result = new language.Absyn.NonInternal($p_2.getText(),$p_3.getText(),$p_5.result); } # NonInternal
  | Surrogate_id_SYMB_8 p_2=STRING  { $result = new language.Absyn.AnyExp($p_2.getText()); } # AnyExp
;
listseveral returns [ language.Absyn.ListSeveral result ] :  /* empty */  { $result = new language.Absyn.ListSeveral(); } # ListSeveral_Empty 
  | p_1=several  { $result = new language.Absyn.ListSeveral(); $result.addLast($p_1.result); } # ListSeveral_AppendLast
  | p_1=several Surrogate_id_SYMB_3 p_3=listseveral  { $result = $p_3.result; $result.addFirst($p_1.result); } # ListSeveral_PrependFirst
;
several returns [ language.Absyn.Several result ] : Surrogate_id_SYMB_4 p_2=exp  { $result = new language.Absyn.Several1($p_2.result); } # Several1 
  | Surrogate_id_SYMB_5 p_2=exp  { $result = new language.Absyn.Several2($p_2.result); } # Several2
;
type returns [ language.Absyn.Type result ] : Surrogate_id_SYMB_6 p_2=CHAR  { $result = new language.Absyn.Type1($p_2.getText().charAt(0)); } # Type1
  | Surrogate_id_SYMB_7 p_2=DOUBLE p_3=INTEGER p_4=IDENT  { $result = new language.Absyn.Type2(Double.parseDouble($p_2.getText()),Integer.parseInt($p_3.getText()),$p_4.getText()); } # Type2
;

